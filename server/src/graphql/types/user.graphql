scalar Date

type Query {
  user(id: ID!): User!
  users: [User!]!
  activeUser: User
}

type User {
  id: String!
  username: String!
  password: String!
  createdAt: Date
  snaps:[Snap!]!
}

type Mutation {
  CreateUser(data: CreateUserInput!): Token
  SignIn(data: SignInUserInput!): Token
}

input CreateUserInput {
  username: String!
  password: String!
}

input SignInUserInput {
  username: String!
  password: String!
}

type Subscription {
  user: User!
}